
stages:
- build
- gcloud

.docker:
  after_script:
  - docker logout
  before_script:
  - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD
  image:
    name: docker:19.03.11
  services:
  - docker:19.03.11-dind

.gcloud:
  image:
    name: kshuleshov/otus-kuber-2020-04_gcloud-helmfile
  rules:
  - allow_failure: true
    when: manual

.build:docker:
  extends: .docker
  rules:
  - changes:
    - $SRC_PATH/*
  script:
  - cd $SRC_PATH
  - docker build . -f Dockerfile -t $IMAGE_TAG
  - docker push $IMAGE_TAG
  stage: build
  variables:
    IMAGE_TAG: IMAGE_TAG
    SRC_PATH: SRC_PATH

build:manager:
  extends: .build:docker
  variables:
    IMAGE_TAG: $DOCKER_REGISTRY_USER/otus-kuber-2020-04_ingress-host-manager:latest
    SRC_PATH: gopath/src/ingress-host-manager

build:gcloud:
  extends: .build:docker
  variables:
    IMAGE_TAG: $DOCKER_REGISTRY_USER/otus-kuber-2020-04_gcloud-helmfile:latest
    SRC_PATH: gcloud

gcloud:create-cluster:
  artifacts:
    paths:
    - public
    reports:
      dotenv: deploy.env
  environment:
    name: gcloud
    on_stop: gcloud:delete-cluster
    url: https://sock-shop.$DYNAMIC_ENVIRONMENT_IP.xip.io
  extends: .gcloud
  script:
  - ./create-cluster.docker.sh
  - echo "DYNAMIC_ENVIRONMENT_IP=$(./get-ingress-ip.sh)" >> deploy.env
  stage: gcloud

gcloud:delete-cluster:
  environment:
    action: stop
    name: gcloud
  extends: .gcloud
  script:
  - ./delete-cluster.docker.sh
  stage: gcloud
