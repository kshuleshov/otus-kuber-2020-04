alertmanager:
  alertmanagerSpec:
    nodeSelector: &nodeSelector
      cloud.google.com/gke-nodepool: infra-pool
    tolerations: &tolerations
    - key: node-role
      operator: Equal
      value: infra
      effect: NoSchedule
  ingress:
    enabled: true
    annotations:
      certmanager.k8s.io/acme-challenge-type: http01
      #certmanager.k8s.io/cluster-issuer: letsencrypt-production
      certmanager.k8s.io/cluster-issuer: letsencrypt-staging
      kubernetes.io/ingress.class: nginx
    hosts:
    - alertmanager.0.0.0.0.xip.io
    tls:
    - hosts:
      - alertmanager.0.0.0.0.xip.io
      secretName: alertmanager-tls

grafana:
  ingress:
    enabled: true
    annotations:
      certmanager.k8s.io/acme-challenge-type: http01
      #certmanager.k8s.io/cluster-issuer: letsencrypt-production
      certmanager.k8s.io/cluster-issuer: letsencrypt-staging
      kubernetes.io/ingress.class: nginx
    hosts:
    - grafana.0.0.0.0.xip.io
    tls:
    - hosts:
      - grafana.0.0.0.0.xip.io
      secretName: grafana-tls
  nodeSelector: *nodeSelector
  sidecar:
    dashboards:
      searchNamespace: ALL
  tolerations: *tolerations

kube-state-metrics:
  nodeSelector: *nodeSelector
  tolerations: *tolerations

prometheus:
  prometheusSpec:
    nodeSelector: *nodeSelector
    serviceMonitorSelectorNilUsesHelmValues: false
    tolerations: *tolerations

prometheusOperator:
  nodeSelector: *nodeSelector
  tolerations: *tolerations
